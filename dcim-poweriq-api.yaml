openapi: 3.0.1
info:
  title: DCIM POWERIQ API
  description: 'API version 1.1 supports three types of requests: identity, power monitoring for items and locations, and temperature monitoring for racks.'
  version: "1.1"
servers:
- url: /
paths:
  /:
    get:
      summary: 'DCIM PowerIQ API'
      tags:
      - "DCIM POWERIQ API"
      responses:
        200:
          description: "DCIM PowerIQ API"
        401:
          description: Unauthorized Error
  /identity:
    get:
      summary: 'Identity requests will be used by PIQ to identify and discover the ADS and validate the facility item credentials as configured in dcTrack/PIQ.'
      tags:
      - "Identity Requests"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "identity"
                      attributes:
                        type: object
                        properties:
                          api_version:
                            type: string
                            example: '1.0'
                          make:
                            type: string
                            example: "Akamai Data Store"
                          model:
                            type: string
                            example: "Akamai Virtual Device"
        401:
          description: Unauthorized Error
  /identity/power_panel:
    get:
      summary: 'Identity requests will be used by PIQ to identify and discover the ADS and validate the facility item credentials as configured in dcTrack/PIQ. This request will only be issued if right conditions on custom field 1 and 2 are met. Otherwise, the previous identity request will be used.'
      tags:
      - "Identity Requests for Power Panel"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "identity"
                      attributes:
                        type: object
                        properties:
                          api_version:
                            type: string
                            example: '1.1'
                          make:
                            type: string
                            example: "Akamai Data Store"
                          model:
                            type: string
                            example: "Akamai Virtual Power Panel"
        401:
          description: Unauthorized Error
  /monitor/sensor_readings:
    get:
      summary: 'Monitor requests will be used by PIQ to perform data collection of power readings following initial discovery. Monitor requests will retrieve sensor readings for a set of server identifiers (i.e., IP addresses) passed in the request URL.' 
      tags:
      - "Monitor Requests"
      parameters:
      - name: filter[server_id]
        in: query
        required: true
        description: Ip Address
        schema:
          type: string
          example: "192.168.1.10,192.168.1.11"
      responses:
        200:
          description: "Returns sensor reading else message saying server ID not found"
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                          example: "sensor_readings"
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            active_power_watts:
                              type: number
                              example: 82.5
                        relationships:
                          type: object
                          properties:
                            server:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      example: "192.168.1.10"
        400:
          description: "server_id is required"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "server_id 192.168.1.10 is required"
        401:
          description: Unauthorized Error
  /monitor/sensor_readings?:
  # Swagger doesn't allow to have same API path with different query params, to make this happen adding ? at the end of path, please note that ? is not part of the API path. Actual path would still be used as /monitor/sensor_readings?filter[power_panel_id]=B-W-5JAOOX
    get:
      summary: 'Monitor requests will be used by PIQ to perform data collection of power readings following initial discovery. This request will retrieve sensor readings for a power panel id passed in the request URL' 
      tags:
      - "Monitor Requests"
      parameters:
      - name: filter[power_panel_id]
        in: query
        required: true
        description: Data Center ID
        schema:
          type: string
          example: "B-W-5JAOOX"
      responses:
        200:
          description: "Returns sensor reading else message saying Power Panel ID not found"
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                          example: "sensor_readings"
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            active_power_watts:
                              type: number
                              example: 2544258.5
                        relationships:
                          type: object
                          properties:
                            server:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      example: "B-W-5JAOOX"
        400:
          description: "power_panel_id is required"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "power_panel_id is required"
        401:
          description: Unauthorized Error
  /monitor/rack_sensor_readings:
    get:
      summary: 'Monitor requests will retrieve rack sensor readings for a given powerIQ rack ID passed in the request URL.' 
      tags:
      - "Monitor Requests"
      parameters:
      - name: filter[rack_id]
        in: query
        required: true
        description: Rack ID
        schema:
          type: string
      responses:
        200:
          description: "Returns rack sensor reading else empty list"
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                          example: "rack_sensor_readings"
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            inlet_temperature_bottom:
                              type: number
                              example: 30.93
                            outlet_temperature_bottom:
                              type: number
                              example: 36.5
                            inlet_temperature_middle:
                              type: number
                              example: 30.56
                            outlet_temperature_middle:
                              type: number
                              example: 35.79
                            inlet_temperature_top:
                              type: number
                              example: 30.83
                            outlet_temperature_top:
                              type: number
                              example: 32.19
                        relationships:
                          type: object
                          properties:
                            rack:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      example: 100
        400:
          description: "Rack ID is required"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Rack ID is required"
        404:
          description: "Rack ID <ID> doesn't not exists"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Rack with ID 106, doesn't exists"
        422:
          description: "Rack ID <ID> must be integer"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Rack ID 12hj must be integer"
        401:
          description: Unauthorized Error
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
